; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "LIFT-CS Java Programming Environment"
#define MyAppVersion "1.0"
#define MyAppPublisher "Princeton LIFT"
#define MyAppURL "http://lift.cs.princeton.edu/java/windows"
#define WorkingDirectory "C:\Users\Chris Pan\LIFT-CS\Installer\"
#define IntelliJInstaller "ideaIC-2018.2.exe"
#define GitBashInstaller "Git-2.18.0-64-bit.exe"
#define XMingInstaller "Xming-6-9-0-31-setup.exe"
#define IntelliJVersion '2018.2'
#define JDKVersion '10.0.2'




[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{2304E6BC-8281-4016-960C-AD630C4937FA}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={pf}\LIFT-CS
DefaultGroupName={#MyAppName}
LicenseFile={#WorkingDirectory}liscence.txt
OutputDir={#WorkingDirectory}output
OutputBaseFilename=lift-installer
Compression=lzma
SolidCompression=yes
PrivilegesRequired=admin

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: installjava; Description: "Install OpenJDK {#JDKVersion}"
Name: installgit; Description: "Install Git Bash"
Name: installintellij; Description: "Install IntelliJ Community Edition {#IntellijVersion}"

[Files]
Source: "{#WorkingDirectory}ideaIC-2018.2.exe"; DestDir: "{tmp}"; Flags: ignoreversion; Tasks: installintellij;
Source: "{#WorkingDirectory}Xming-6-9-0-31-setup.exe"; DestDir: "{tmp}"; Flags: ignoreversion; Tasks: installgit
Source: "{#WorkingDirectory}Git-2.18.0-64-bit.exe"; DestDir: "{tmp}"; Flags: ignoreversion; Tasks: installgit
Source: "{#WorkingDirectory}ide-prefs\*"; DestDir: "{tmp}"; Flags: ignoreversion recursesubdirs createallsubdirs; Tasks: installintellij
Source: "{#WorkingDirectory}jdk\*"; DestDir: "{pf64}\Java"; Flags: ignoreversion recursesubdirs createallsubdirs; Tasks: installjava
Source: "{#WorkingDirectory}jdk.table.xml"; DestDir: "{tmp}"; Flags: ignoreversion; Tasks: installintellij
Source: "{#WorkingDirectory}terminal.xml"; DestDir: "{tmp}"; Flags: ignoreversion; Tasks: installintellij
Source: "{#WorkingDirectory}setxmlfiles.bat"; DestDir: "{tmp}"; Flags: ignoreversion; Tasks: installintellij
Source: "{#WorkingDirectory}copyintellijprefs.bat"; DestDir: "{tmp}"; Flags: ignoreversion; Tasks: installintellij 
Source: "{#WorkingDirectory}copybashprefs.bat"; DestDir: "{tmp}"; Flags: ignoreversion; Tasks: installgit
Source: "{#WorkingDirectory}lift-cli\*"; DestDir: "{pf64}\Git\usr\local"; Flags: ignoreversion recursesubdirs createallsubdirs; Tasks: installgit
Source: "{#WorkingDirectory}.bashrc"; DestDir: "{tmp}"; Flags: ignoreversion; Tasks: installgit
Source: "{#WorkingDirectory}.bash_profile"; DestDir: "{tmp}"; Flags: ignoreversion; Tasks: installgit
Source: "{#WorkingDirectory}.inputrc"; DestDir: "{tmp}"; Flags: ignoreversion; Tasks: installgit
; NOTE: Don't use "Flags: ignoreversion" on any shared system files 

[Run]
Filename: "{tmp}\{#IntelliJInstaller}"; Parameters: "/S /D={pf64}\JetBrains"; StatusMsg: "Installing Intellij... (This may take a while)"; Tasks: installintellij
Filename: "{tmp}\{#XMingInstaller}"; Parameters: "/SILENT /LOG"; StatusMsg: "Installing XMing"; Tasks: installgit
Filename: "{tmp}\{#GitBashInstaller}"; Parameters: "/SILENT"; StatusMsg: "Installing Git"; Tasks: installgit        
Filename: "{tmp}\copyintellijprefs.bat"; Parameters:"""{tmp}"" ""{%HOMEPATH}"" {#IntelliJVersion}"; Flags: runasoriginaluser; Tasks: installintellij    
Filename: "{tmp}\copybashprefs.bat"; Parameters:"""{tmp}"" ""{%HOMEPATH}"""; Flags: runasoriginaluser; Tasks: installgit 
Filename: "{tmp}\setxmlfiles.bat"; Parameters: "{#JDKVersion} ""{pf64}\Git\bin\bash.exe"" ""{tmp}"" ""{%HOMEPATH}"" .IdeaIC{#IntelliJVersion}"; Flags: runasoriginaluser; Tasks: installintellij  
     

[Registry]
Root: HKLM; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; \
    ValueType: expandsz; ValueName: "Path"; ValueData: "{pf64}\Java\jdk-{#JDKVersion}\bin;{olddata}"; \
    Check: NeedsAddPath(ExpandConstant('{pf64}\Java\jdk-{#JDKVersion}\bin')); Tasks: installjava


[Code]

function NeedsAddPath(Param: string): boolean;
var
  OrigPath: string;
begin
  if not RegQueryStringValue(
    HKLM,
    'SYSTEM\CurrentControlSet\Control\Session Manager\Environment',
    'Path', OrigPath)
  then begin
    Result := True;
    exit;
  end;
  { look for the path with leading and trailing semicolon }
  { Pos() returns 0 if not found }
  Log(Param);
  Log(OrigPath);
  Result :=
    (Pos(';' + UpperCase(Param) + ';', ';' + UpperCase(OrigPath) + ';') = 0) and
    (Pos(';' + UpperCase(Param) + '\;', ';' + UpperCase(OrigPath) + ';') = 0); 
  Log(IntToStr(Integer(Result)));
end;





